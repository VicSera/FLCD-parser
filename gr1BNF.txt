program := cmpdstmt
declaration :=  type " "  identifier |  declaration identifier
type  := simpleType | listDeclaration
simpleType := "int" | "bool" | "string"
listDeclaration := "list" "<" simpleType "," no ">" identifier
cmpdstmt := "{" stmtlist "}"
stmtlist  := stmt | stmtlist ";" stmt 
stmt  := simplstmt | structstmt
simplstmt  := assignstmt | istmt | ostmt
assignstmt := identifier "<-" expression
istmt := identifier "<-" "Input" "()"
ostmt := "Print" "("  string ")"
structstmt := cmpdstmt | ifstmt | forstmt
ifstmt := "if" "("condition ")" "then" structstmt | "if" "("condition ")" "then" structstmt "else" structstmt
forstmt := "for" "(" simpleType assignstmt "," no "," no ")" "do" structstmt
condition := "("expression relation expression")"
expression := expression "+" term | expression "-" term
term := term "*" element | term "/" element | element
element := epxression | identifier | number
